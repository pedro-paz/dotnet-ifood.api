// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using deep.wefood.api.Infrastructure.Contexts;
using deep.wefood.api.Infrastructure.Repositories;

namespace deep.wefood.api.Infrastructure.Migrations
{
    [DbContext(typeof(PostgresContext))]
    partial class PostgresContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

            modelBuilder.Entity("deep.wefood.api.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cli_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("cli_dt_cadastro")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cli_email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cli_nome");

                    b.HasKey("Id");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("deep.wefood.api.Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("emp_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("emp_dt_cadastro")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("emp_guid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("emp_nome");

                    b.HasKey("Id");

                    b.ToTable("empresas");
                });

            modelBuilder.Entity("deep.wefood.api.Domain.Entities.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ing_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("ing_dt_cadastro")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ing_desc");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("ing_guid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("integer")
                        .HasColumnName("ing_emp_id");

                    b.Property<int>("IdProduto")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ing_nome");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdProduto");

                    b.ToTable("ingredientes");
                });

            modelBuilder.Entity("deep.wefood.api.Domain.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ped_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("ped_dt_cadastro")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer")
                        .HasColumnName("ped_cli_id");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("pedidos");
                });

            modelBuilder.Entity("deep.wefood.api.Domain.Entities.PedidoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pedprod_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("pedprod_dt_cadastro")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("IdPedido")
                        .HasColumnType("integer")
                        .HasColumnName("pedprod_ped_id");

                    b.Property<int>("IdProduto")
                        .HasColumnType("integer")
                        .HasColumnName("pedprod_prod_id");

                    b.HasKey("Id");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdProduto");

                    b.ToTable("pedido_produtos");
                });

            modelBuilder.Entity("deep.wefood.api.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("prod_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("prod_dt_cadastro")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("prod_desc");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("prod_guid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("integer")
                        .HasColumnName("prod_emp_id");

                    b.Property<string>("Nome")
                        .HasColumnType("text")
                        .HasColumnName("prod_nome");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("deep.wefood.api.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("user_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("user_dt_cadastro")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_email");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("user_guid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("integer")
                        .HasColumnName("user_emp_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_senha");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("deep.wefood.api.Domain.Entities.Ingrediente", b =>
                {
                    b.HasOne("deep.wefood.api.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("deep.wefood.api.Domain.Entities.Produto", "Produto")
                        .WithMany("Ingredientes")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("deep.wefood.api.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("deep.wefood.api.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("deep.wefood.api.Domain.Entities.PedidoProduto", b =>
                {
                    b.HasOne("deep.wefood.api.Domain.Entities.Pedido", "Pedido")
                        .WithMany("PedidoProdutos")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("deep.wefood.api.Domain.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("deep.wefood.api.Domain.Entities.Produto", b =>
                {
                    b.HasOne("deep.wefood.api.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("deep.wefood.api.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("deep.wefood.api.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("deep.wefood.api.Domain.Entities.Empresa", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("deep.wefood.api.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("PedidoProdutos");
                });

            modelBuilder.Entity("deep.wefood.api.Domain.Entities.Produto", b =>
                {
                    b.Navigation("Ingredientes");
                });
#pragma warning restore 612, 618
        }
    }
}
